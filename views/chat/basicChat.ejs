<div id="chat-window-basic">
    <% if(typeof user === 'object' && user) { %>
        <h1>Room: Main Chat </h1>
        <button id="chatToggle">chat</button>
        <script>var firstName = "<%= user.firstName %>";</script>
        
          
            <div id="userList">
                <div class="loaderWheel"><div class="wheel">0</div></div>
            <!--My Users Populate Here div class="userOnline"-->
            </div>
      <div class="inputBar">
            <input id="chatInput" autocomplete="off" /><button id="submitChat">Send</button>
        </div>
        <div id="chat">
            <ul id="messages"></ul>
        </div>
    <% } else { %>
        <p>Please log in to join the chat.</p>
    <% } %>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', ()=>{

    var socket = io('/main_chat'); 

    // Function to add messages to the DOM
    function addMessage(message) {
        console.log(message)
        var messages = document.getElementById('messages');
        var li = document.createElement('li');
        li.textContent = message;
        messages.appendChild(li);
    }

    // Add click event listener to the submit button
    var submitChat = document.getElementById('submitChat');
    if (submitChat) {
        submitChat.addEventListener('click', function(event) {
            var input = document.getElementById('chatInput');
            var message = input.value.trim();

            if (message !== '') {
                socket.emit('chat message', message); // Emit the message
                addMessage('You: ' + message); // Add message to the DOM
                input.value = ''; // Clear the input
            }
        });
    } else {
        console.log('Submit Chat button not found'); // Debugging: Check if button is found
    }

    // Listen for chat messages from the server
    socket.on('chat message', function(msg) {
        addMessage(msg); // Add incoming message to the DOM
    });
    socket.on('user list', function(users) {
    var userList = document.getElementById('userList');
    userList.innerHTML = ''; // Clear current list
    users.forEach(function(user) {
        var div = document.createElement('div');
        div.className = 'usersOnline';
        var img = document.createElement('img'); // Correct method to create an img element
        img.className = 'userImage'; // Assign a class for styling if needed
        img.alt = user[0]; // Set alt text to user's name
        img.src = '/images/userHeadshots/<%=user.userImg%>'; // Set the source of your image
        
        div.appendChild(img); // Append the img element to the div
        userList.appendChild(div); // Append the div to the userList container
    });
});

    // Error handling for Socket.IO
    socket.on('connect_error', (error) => {
        console.log('Connection Error:', error); // Log connection errors
    });
    socket.on('ping', (data) => {
                console.log(data.msg); // Logging the ping message from the server

                // Optionally, send a pong message back to the server
                socket.emit('pong', { msg: 'Pong from client' });
            });
      
    console.log('basic Chat!!')
})
document.addEventListener('DOMContentLoaded', ()=>{
    let chatWindowState = null;
const chatToggle = document.getElementById('chatToggle');
const chatBasicWindow = document.getElementById('chat-window-basic');
const main = document.getElementById('main')
chatToggle.addEventListener('click', ()=>{
    if(chatBasicWindow.style.transform!="translateX(-106%)"){
        chatBasicWindow.style.transform="translateX(-106%)";
  
   chatToggle.innerHTML="close";  
   chatWindowState="open"   
}else{
   
    chatBasicWindow.style.transform="translateX(0%)";
    chatToggle.innerHTML="chat";  
    chatWindowState="hidden"   ;
}
})
})




</script>