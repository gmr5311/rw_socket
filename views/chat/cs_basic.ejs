
    <h1>Video and Text Chat</h1>

    <%if(typeof user == 'object' && user){%>
        <p>Welcome, <%= user.username %>!</p>
        <!-- Video chat interface -->
        <div id="videoChat">
            <!-- Video streams will be displayed here -->
            <div id="videos"></div>
        </div>

        <!-- Text chat interface -->
        <div id="textChat">
            <!-- Chat messages will be displayed here -->
            <ul id="messages"></ul>
            <!-- Form for sending new messages -->
            <form id="form" action="">
                <input id="input" autocomplete="off" />
                <button>Send</button>
            </form>
        </div>
    <% } else { %>
        <p>Please log in to join the chat.</p>
    <% } %>

    <!-- Include Socket.IO library -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
        var socket = io();

        // Function to add new video streams to the chat interface
        function addVideoStream(stream, userId) {
            var videoContainer = document.getElementById('videos');
            var videoElement = document.createElement('video');
            videoElement.autoplay = true;
            videoElement.srcObject = stream;
            videoContainer.appendChild(videoElement);
        }

        // Function to remove video stream when a user leaves
        function removeVideoStream(userId) {
            var videoContainer = document.getElementById('videos');
            var videoToRemove = videoContainer.querySelector('[data-userid="' + userId + '"]');
            if (videoToRemove) {
                videoToRemove.remove();
            }
        }

        // Function to add new chat messages to the interface
        function addMessage(message) {
            var messages = document.getElementById('messages');
            var li = document.createElement('li');
            li.textContent = message;
            messages.appendChild(li);
        }

        // Send chat message
        document.getElementById('form').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent form submission
            var input = document.getElementById('input');
            var message = input.value.trim(); // Get input value

            if (message !== '') {
                socket.emit('chat message', message);
                input.value = ''; // Clear input field
            }
        });

        // Receive video streams from the server
        socket.on('user-connected', function(userId, stream) {
            addVideoStream(stream, userId);
        });

        // Remove video streams when a user leaves
        socket.on('user-disconnected', function(userId) {
            removeVideoStream(userId);
        });

        // Receive chat messages from the server
        socket.on('chat message', function(msg) {
            addMessage(msg);
        });

        // Example trigger execution
        socket.on('trigger', function(data) {
            // Execute trigger actions based on data
            console.log('Trigger executed:', data);
        });
    </script>

